{"version":3,"file":"static/js/47.c126c0c0.chunk.js","mappings":"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","sources":["components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/shared-components/Flex/index.js","components/layout-components/MobileNav.js","components/layout-components/NavProfile.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { DashboardOutlined } from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  isGroupTitle: true,\r\n  submenu: [\r\n    {\r\n      key: 'dashboards-default',\r\n      path: `${APP_PREFIX_PATH}/dashboards/default`,\r\n      title: 'sidenav.dashboard.default',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n  ]\r\n}]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n\tlet keyList = [];\r\n\tlet keyString = \"\";\r\n\tif (key) {\r\n\t\tconst arr = key.split(\"-\");\r\n\t\tfor (let index = 0; index < arr.length; index++) {\r\n\t\t\tconst elm = arr[index];\r\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n\t\t\tkeyList.push(keyString);\r\n\t\t}\r\n\t}\r\n\treturn keyList;\r\n};\r\n\r\nconst MenuItem = ({title, icon, path}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tdispatch(onMobileNavToggle(false))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{icon && <Icon type={icon} /> }\r\n\t\t\t<span>{setLocale(title)}</span>\r\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst getSideNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\r\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\r\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst getTopNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\r\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst SideNavContent = (props) => {\r\n\r\n\tconst { routeInfo, hideGroupTitle } = props;\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\r\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig), []);\r\n\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tmode=\"inline\"\r\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n\t\t\tstyle={{ height: \"100%\", borderRight: 0 }}\r\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\r\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst TopNavContent = () => {\r\n\r\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), [])\r\n\r\n\treturn (\r\n\t\t<Menu \r\n\t\t\tmode=\"horizontal\" \r\n\t\t\tstyle={{ backgroundColor: topNavColor }}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n\treturn props.type === NAV_TYPE_SIDE ? (\r\n\t\t<SideNavContent {...props} />\r\n\t) : (\r\n\t\t<TopNavContent {...props} />\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor,}) => {\r\n\tconst props = { topNavColor }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n\tconst navType = useSelector(state => state.theme.navType);\r\n\r\n\tconst getLogoWidthGutter = () => {\r\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif(isNavTop) {\r\n\t\t\treturn 'auto'\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst getLogo = () => {\r\n\t\tif(logoType === 'light') {\r\n\t\t\tif(navCollapsed) {\r\n\t\t\treturn '/img/logo-sm-white.png'\r\n\t\t\t}\r\n\t\t\treturn '/img/logo-white.png'\r\n\t\t}\r\n\t\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn '/img/logo-sm.png'\r\n\t\t}\r\n\t\treturn '/img/logo.png'\r\n\t}\r\n\t\r\n\tconst getLogoDisplay = () => {\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 'd-none'\r\n\t\t} else {\r\n\t\t\treturn 'logo'\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={getLogoDisplay()} \r\n\t\t\tstyle={{width: `${getLogoWidthGutter()}`}}>\r\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`}/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { sideNavTheme, routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"between\" alignItems=\"center\">\r\n\t\t\t\t\t<Logo mobileLogo={true} />\r\n\t\t\t\t\t<div className=\"nav-close\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"mobile-nav-menu\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import React from 'react'\r\nimport { Menu, Dropdown, Avatar } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { LogoutOutlined } from '@ant-design/icons'\r\nimport { signOut } from 'store/slices/authSlice'\r\n\r\nconst MenuItemSignOut = (props) => (\r\n\t<span>\r\n\t\t<LogoutOutlined className='font-size-md' />\r\n\t\t<span className='font-weight-normal mx-2'>{props.label}</span>\r\n\t</span>\r\n)\r\n\r\nexport const NavProfile = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst handleClick = ({ key }) => {\r\n\t\tif (key === 'Sign Out') {\r\n\t\t\thandleSignOut()\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tdispatch(signOut())\r\n\t}\r\n\r\n\tconst menu = (\r\n\t\t<Menu\r\n\t\t\tonClick={handleClick}\r\n\t\t\titems={[\r\n\t\t\t\t{\r\n\t\t\t\t\tkey: 'Sign Out',\r\n\t\t\t\t\tlabel: <MenuItemSignOut label='Sign Out' />,\r\n\t\t\t\t},\r\n\t\t\t]}\r\n\t\t/>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<Dropdown placement='bottomRight' overlay={menu} trigger={['click']}>\r\n\t\t\t<div className='nav-item'>\r\n\t\t\t\t<div className='d-flex align-items-center'>\r\n\t\t\t\t\t<Avatar src='/img/avatars/thumb-1.jpg' />\r\n\t\t\t\t\t<div className='pl-2 d-none d-sm-block profile-text'>\r\n\t\t\t\t\t\t<div className='font-size-base font-weight-bold'>\r\n\t\t\t\t\t\t\tVan Hung\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span className='opacity-0-8'>Admin</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nexport default NavProfile\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Layout } from 'antd'\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons'\r\nimport Logo from './Logo'\r\nimport NavProfile from './NavProfile'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice'\r\nimport {\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_COLLAPSED_WIDTH,\r\n\tSIDE_NAV_WIDTH,\r\n} from 'constants/ThemeConstant'\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout\r\n\r\nexport const HeaderNav = (props) => {\r\n\tconst { isMobile } = props\r\n\r\n\t// const [searchActive, setSearchActive] = useState(false);\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst navCollapsed = useSelector((state) => state.theme.navCollapsed)\r\n\tconst mobileNav = useSelector((state) => state.theme.mobileNav)\r\n\tconst navType = useSelector((state) => state.theme.navType)\r\n\tconst headerNavColor = useSelector((state) => state.theme.headerNavColor)\r\n\tconst currentTheme = useSelector((state) => state.theme.currentTheme)\r\n\t// const direction = useSelector(state => state.theme.direction)\r\n\r\n\t// const onSearchActive = () => {\r\n\t// \tsetSearchActive(true)\r\n\t// }\r\n\r\n\t// const onSearchClose = () => {\r\n\t// \tsetSearchActive(false)\r\n\t// }\r\n\r\n\tconst onToggle = () => {\r\n\t\tif (!isMobile) {\r\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t\t} else {\r\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\r\n\t\t}\r\n\t}\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\r\n\tconst mode = () => {\r\n\t\tif (!headerNavColor) {\r\n\t\t\treturn utils.getColorContrast(\r\n\t\t\t\tcurrentTheme === 'dark' ? '#00000' : '#ffffff'\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn utils.getColorContrast(headerNavColor)\r\n\t}\r\n\r\n\tconst navMode = mode()\r\n\r\n\tconst getNavWidth = () => {\r\n\t\tif (isNavTop || isMobile) {\r\n\t\t\treturn '0px'\r\n\t\t}\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tif (!isMobile) {\r\n\t// \t\tonSearchClose()\r\n\t// \t}\r\n\t// })\r\n\r\n\treturn (\r\n\t\t<Header\r\n\t\t\tclassName={`app-header ${navMode}`}\r\n\t\t\tstyle={{ backgroundColor: headerNavColor }}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`app-header-wrapper ${\r\n\t\t\t\t\tisNavTop ? 'layout-top-nav' : ''\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\t<Logo logoType={navMode} />\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='nav'\r\n\t\t\t\t\tstyle={{ width: `calc(100% - ${getNavWidth()})` }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className='nav-left'>\r\n\t\t\t\t\t\t<div className='nav-item' onClick={onToggle}>\r\n\t\t\t\t\t\t\t<div className='d-flex align-items-center'>\r\n\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? (\r\n\t\t\t\t\t\t\t\t\t<MenuUnfoldOutlined className='nav-icon' />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<MenuFoldOutlined className='nav-icon' />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='nav-right'>\r\n\t\t\t\t\t\t<NavProfile />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default HeaderNav\r\n","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn (\r\n\t\t<Breadcrumb.Item key={url}>\r\n\t\t\t<Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t</Breadcrumb.Item>\r\n\t\t);\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { \r\n    SIDE_NAV_WIDTH, \r\n    SIDE_NAV_COLLAPSED_WIDTH,\r\n    NAV_TYPE_SIDE,\r\n    NAV_TYPE_TOP,\r\n    DIR_RTL,\r\n    DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === NAV_TYPE_SIDE\r\n    const isNavTop = navType === NAV_TYPE_TOP\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const { status } = useThemeSwitcher();\r\n\r\n    if (status === 'loading') {\r\n        return <Loading cover=\"page\" />;\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === DIR_LTR) {\r\n        return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === DIR_RTL) {\r\n        return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n            <Layout className=\"app-container\">\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n                <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n                    <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content>\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </div>\r\n                    <Footer />\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));"],"names":["id","fallback","translate","t","useTranslation","Icon","this","props","type","className","React","Component","dashBoardNavTree","key","path","APP_PREFIX_PATH","title","icon","DashboardOutlined","breadcrumb","isGroupTitle","submenu","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","setDefaultOpen","keyList","keyString","arr","index","elm","MenuItem","dispatch","useDispatch","isMobile","utils","getBreakPoint","includes","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","map","nav","label","children","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","useSelector","state","theme","menuItems","useMemo","navigationConfig","mode","SIDE_NAV_LIGHT","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","autoHide","getColorContrast","NAV_TYPE_TOP","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","Flex","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","padding","ArrowLeftOutlined","MenuItemSignOut","LogoutOutlined","handleSignOut","signOut","menu","overlay","trigger","Header","headerNavColor","currentTheme","navMode","toggleCollapsedNav","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","pathSnippets","useLocation","pathname","buildBreadcrumb","_","url","slice","AppBreadcrumb","display","Footer","Date","getFullYear","href","e","preventDefault","Content","AppLayout","direction","location","currentRouteInfo","isNavSide","getLayoutGutter","useThemeSwitcher","status","Loading","cover","DIR_LTR","paddingLeft","DIR_RTL","paddingRight","Suspense","locale"],"sourceRoot":""}