{"version":3,"file":"static/js/787.81fee8ab.chunk.js","mappings":"oRAiBaA,EAAY,SAACC,GACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAGhBC,EAWGH,EAXHG,mBACAC,EAUGJ,EAVHI,gBACAC,EASGL,EATHK,sBACAC,EAQGN,EARHM,YACAC,EAOGP,EAPHO,OACAC,EAMGR,EANHQ,MACAC,EAKGT,EALHS,QACAC,EAIGV,EAJHU,SACAC,EAGGX,EAHHW,YACAC,EAEGZ,EAFHY,QAVD,EAYIZ,EADHa,cAAAA,OAXD,SAoCA,OAZAC,EAAAA,EAAAA,YAAU,WAIT,GAHc,OAAVN,GAAkBK,GACrBZ,EAASS,GAENC,EAAa,CAChB,IAAMI,EAAQC,YAAW,kBAAMZ,GAAN,GAAyB,KAClD,OAAO,WACNa,aAAaF,EACb,CACD,CACD,KAGA,iCACC,SAAC,SAAD,CACCG,QAAS,CAAEC,QAAS,EAAGC,aAAc,GACrCC,QAAS,CACRF,QAASR,EAAc,EAAI,EAC3BS,aAAcT,EAAc,GAAK,GAJnC,UAOC,SAAC,IAAD,CAAOW,KAAK,QAAQC,UAAQ,EAACX,QAASA,OAEvC,UAAC,IAAD,CACCY,OAAO,WACPC,KAAK,aACLC,cApCuB,CACzBC,MAAO,kBACPC,SAAU,YAmCRC,SAhCa,SAACC,GAChBxB,IACAC,EAAOuB,EACP,EAyBC,WAMC,SAAC,SAAD,CACCL,KAAK,QACLM,MAAM,QACNC,MAAO,CACN,CACCC,UAAU,EACVrB,QAAS,2BAEV,CACCU,KAAM,QACNV,QAAS,mCAVZ,UAcC,SAAC,IAAD,CAAOsB,QAAQ,SAACC,EAAA,EAAD,CAAcC,UAAU,sBAExC,SAAC,SAAD,CACCX,KAAK,WACLM,OACC,iBACCK,UAAS,UACRjC,EACG,0DACA,IAJL,WAOC,uCACCA,IACA,iBACCkC,QAAS,kBAAMhC,CAAN,EACT+B,UAAU,4DAFX,iCASHJ,MAAO,CACN,CACCC,UAAU,EACVrB,QAAS,+BAxBZ,UA4BC,SAAC,aAAD,CACCsB,QAAQ,SAACI,EAAA,EAAD,CAAcF,UAAU,sBAGlC,SAAC,SAAD,WACC,SAAC,IAAD,CACCd,KAAK,UACLiB,SAAS,SACTC,OAAK,EACL/B,QAASA,EAJV,4BAYJ,EAQDV,EAAU0C,aAAe,CACxBC,aAAa,EACbvC,oBAAoB,GAGrB,IAKMwC,EAAqB,CAC1BpC,OAAAA,EAAAA,GACAqC,gBAAAA,EAAAA,GACAtC,YAAAA,EAAAA,GACAF,gBAAAA,EAAAA,GACAyC,iBAAAA,EAAAA,GACAC,mBAAAA,EAAAA,IAGD,GAAeC,EAAAA,EAAAA,KAdS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAE1B,MAAO,CAAEvC,QADkDuC,EAAnDvC,QACUG,QADyCoC,EAA1CpC,QACUD,YADgCqC,EAAjCrC,YACcH,MADmBwC,EAApBxC,MACQE,SADYsC,EAAbtC,SAE9C,GAWuCiC,EAAxC,CAA4D5C,G,uCC3JtDkD,EAAkB,CACvBC,gBAAiB,8BACjBC,iBAAkB,YAClBC,eAAgB,SA+CjB,EA5Cc,SAACpD,GACd,IAAMqD,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,MAAMG,YAAvB,IAC1B,OACC,gBAAKpB,UAAU,QAAQqB,MAAOR,EAA9B,UACC,gBAAKb,UAAU,4DAAf,UACC,SAAC,IAAD,CAAKsB,QAAQ,SAAb,UACC,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAjC,UACC,SAAC,IAAD,WACC,iBAAK1B,UAAU,OAAf,WACC,iBAAKA,UAAU,cAAf,WACC,gBACCA,UAAU,YACV2B,IAAG,eACQ,UAAVV,EACG,WACA,kBAEJW,IAAI,MAEL,sDAC4B,KAC3B,SAAC,KAAD,CAAMC,GAAG,iBAAT,4BAGF,SAAC,IAAD,CAAKP,QAAQ,SAAb,UACC,SAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,UACC,SAAC,GAAD,UAAe9D,SAIjB,gBAAKoC,UAAU,cAAf,UACC,SAAC,KAAD,CAAM6B,GAAG,wBAAT,4CAWR,C","sources":["views/auth-views/components/LoginForm.js","views/auth-views/authentication/login/index.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Input, Alert } from 'antd'\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n\tsignIn,\r\n\tshowLoading,\r\n\tshowAuthMessage,\r\n\thideAuthMessage,\r\n\tsignInWithGoogle,\r\n\tsignInWithFacebook,\r\n} from 'store/slices/authSlice'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\n\r\nexport const LoginForm = (props) => {\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst {\r\n\t\tshowForgetPassword,\r\n\t\thideAuthMessage,\r\n\t\tonForgetPasswordClick,\r\n\t\tshowLoading,\r\n\t\tsignIn,\r\n\t\ttoken,\r\n\t\tloading,\r\n\t\tredirect,\r\n\t\tshowMessage,\r\n\t\tmessage,\r\n\t\tallowRedirect = true,\r\n\t} = props\r\n\r\n\tconst initialCredential = {\r\n\t\temail: 'admin@gmail.com',\r\n\t\tpassword: '12345678',\r\n\t}\r\n\r\n\tconst onLogin = (values) => {\r\n\t\tshowLoading()\r\n\t\tsignIn(values)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (token !== null && allowRedirect) {\r\n\t\t\tnavigate(redirect)\r\n\t\t}\r\n\t\tif (showMessage) {\r\n\t\t\tconst timer = setTimeout(() => hideAuthMessage(), 3000)\r\n\t\t\treturn () => {\r\n\t\t\t\tclearTimeout(timer)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div\r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }}\r\n\t\t\t\tanimate={{\r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Alert type='error' showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form\r\n\t\t\t\tlayout='vertical'\r\n\t\t\t\tname='login-form'\r\n\t\t\t\tinitialValues={initialCredential}\r\n\t\t\t\tonFinish={onLogin}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your email',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\t\t\tmessage: 'Please enter a validate email!',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input prefix={<MailOutlined className='text-primary' />} />\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\t\t\tshowForgetPassword\r\n\t\t\t\t\t\t\t\t\t? 'd-flex justify-content-between w-100 align-items-center'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span>Password</span>\r\n\t\t\t\t\t\t\t{showForgetPassword && (\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tonClick={() => onForgetPasswordClick}\r\n\t\t\t\t\t\t\t\t\tclassName='cursor-pointer font-size-sm font-weight-normal text-muted'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tForget Password?\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your password',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password\r\n\t\t\t\t\t\tprefix={<LockOutlined className='text-primary' />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\thtmlType='submit'\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nLoginForm.propTypes = {\r\n\totherSignIn: PropTypes.bool,\r\n\tshowForgetPassword: PropTypes.bool,\r\n\textra: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n}\r\n\r\nLoginForm.defaultProps = {\r\n\totherSignIn: true,\r\n\tshowForgetPassword: false,\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n\tconst { loading, message, showMessage, token, redirect } = auth\r\n\treturn { loading, message, showMessage, token, redirect }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsignIn,\r\n\tshowAuthMessage,\r\n\tshowLoading,\r\n\thideAuthMessage,\r\n\tsignInWithGoogle,\r\n\tsignInWithFacebook,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)\r\n","import React from 'react'\r\nimport LoginForm from '../../components/LoginForm'\r\nimport { Card, Row, Col } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover',\r\n}\r\n\r\nconst Login = (props) => {\r\n\tconst theme = useSelector((state) => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className='h-100' style={backgroundStyle}>\r\n\t\t\t<div className='container d-flex flex-column justify-content-center h-100'>\r\n\t\t\t\t<Row justify='center'>\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className='my-4'>\r\n\t\t\t\t\t\t\t\t<div className='text-center'>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tclassName='img-fluid'\r\n\t\t\t\t\t\t\t\t\t\tsrc={`/img/${\r\n\t\t\t\t\t\t\t\t\t\t\ttheme === 'light'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? 'logo.png'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: 'logo-white.png'\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\talt=''\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tDon't have an account yet?{' '}\r\n\t\t\t\t\t\t\t\t\t\t<Link to='/auth/register'>Sign Up</Link>\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify='center'>\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<LoginForm {...props} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t{/* forgot password */}\r\n\t\t\t\t\t\t\t\t<div className='text-center'>\r\n\t\t\t\t\t\t\t\t\t<Link to='/auth/forgot-password'>\r\n\t\t\t\t\t\t\t\t\t\tForgot Password?\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Login\r\n"],"names":["LoginForm","props","navigate","useNavigate","showForgetPassword","hideAuthMessage","onForgetPasswordClick","showLoading","signIn","token","loading","redirect","showMessage","message","allowRedirect","useEffect","timer","setTimeout","clearTimeout","initial","opacity","marginBottom","animate","type","showIcon","layout","name","initialValues","email","password","onFinish","values","label","rules","required","prefix","MailOutlined","className","onClick","LockOutlined","htmlType","block","defaultProps","otherSignIn","mapDispatchToProps","showAuthMessage","signInWithGoogle","signInWithFacebook","connect","auth","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","theme","useSelector","state","currentTheme","style","justify","xs","sm","md","lg","src","alt","to"],"sourceRoot":""}